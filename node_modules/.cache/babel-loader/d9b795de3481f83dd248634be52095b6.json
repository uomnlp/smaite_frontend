{"ast":null,"code":"import config from\"./config\";var SERVER_PATH=config.server.host;var FACT_API_PATH=config.fact_api_path;var FACT_API_KEY=config.fact_api_key;var get=function get(){var path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var options={method:'GET',headers:{'Content-Type':'application/json','Pragma':'no-cache','Cache-Control':'private, no-cache, no-store, must-revalidate','Expires':'-1'},credentials:'include',errorRedirect:false};return fetch(SERVER_PATH+path,options);};var relevantClaimSearch=function relevantClaimSearch(){var path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var options={method:'GET',headers:{'Content-Type':'application/json'},errorRedirect:false};return fetch(\"\".concat(FACT_API_PATH,\"?\").concat(path,\"&\").concat(new URLSearchParams({key:FACT_API_KEY})),options);};var post=function post(){var path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var body=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var options={method:'POST',headers:{'Content-Type':'application/json','Pragma':'no-cache','Cache-Control':'private, no-cache, no-store, must-revalidate','Expires':'-1'},body:JSON.stringify(body),credentials:'include'};return fetch(SERVER_PATH+path,options);};var put=function put(){var path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var body=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var options={method:'PUT',headers:{'Content-Type':'application/json','Pragma':'no-cache','Cache-Control':'private, no-cache, no-store, must-revalidate','Expires':'-1'},body:JSON.stringify(body),credentials:'include'};return fetch(SERVER_PATH+path,options);};export{get,post,put,relevantClaimSearch};","map":{"version":3,"names":["config","SERVER_PATH","server","host","FACT_API_PATH","fact_api_path","FACT_API_KEY","fact_api_key","get","path","options","method","headers","credentials","errorRedirect","fetch","relevantClaimSearch","URLSearchParams","key","post","body","JSON","stringify","put"],"sources":["/Users/adityaagarwal/Downloads/SMAITE/smaite_frontend/src/api.js"],"sourcesContent":["import config from \"./config\";\n\nconst SERVER_PATH = config.server.host;\nconst FACT_API_PATH = config.fact_api_path;\nconst FACT_API_KEY = config.fact_api_key;\n\nconst get = (path = '') => {\n    const options = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json', 'Pragma': 'no-cache', 'Cache-Control': 'private, no-cache, no-store, must-revalidate', 'Expires': '-1' },\n        credentials: 'include',\n        errorRedirect: false,\n    };\n\n    return fetch(SERVER_PATH + path, options);\n}\n\nconst relevantClaimSearch = (path = '') => {\n    const options = {\n        method: 'GET',\n        headers: { 'Content-Type': 'application/json' },\n        errorRedirect: false,\n    };\n\n    return fetch(`${FACT_API_PATH}?${path}&${new URLSearchParams({key:FACT_API_KEY})}`, options);\n} \n\nconst post = (path = '', body = {}) => {\n    const options = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', 'Pragma': 'no-cache', 'Cache-Control': 'private, no-cache, no-store, must-revalidate', 'Expires': '-1' },\n        body: JSON.stringify(body),\n        credentials: 'include',\n    };\n\n    return fetch(SERVER_PATH + path, options)\n}\n\nconst put = (path = '', body = {}) => {\n    const options = {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json', 'Pragma': 'no-cache', 'Cache-Control': 'private, no-cache, no-store, must-revalidate', 'Expires': '-1' },\n        body: JSON.stringify(body),\n        credentials: 'include'\n    };\n\n    return fetch(SERVER_PATH + path, options);\n}\n\nexport {\n    get,\n    post,\n    put,\n    relevantClaimSearch\n}"],"mappings":"AAAA,MAAOA,OAAP,KAAmB,UAAnB,CAEA,GAAMC,YAAW,CAAGD,MAAM,CAACE,MAAP,CAAcC,IAAlC,CACA,GAAMC,cAAa,CAAGJ,MAAM,CAACK,aAA7B,CACA,GAAMC,aAAY,CAAGN,MAAM,CAACO,YAA5B,CAEA,GAAMC,IAAG,CAAG,QAANA,IAAM,EAAe,IAAdC,KAAc,2DAAP,EAAO,CACvB,GAAMC,QAAO,CAAG,CACZC,MAAM,CAAE,KADI,CAEZC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAAsC,SAAU,UAAhD,CAA4D,gBAAiB,8CAA7E,CAA6H,UAAW,IAAxI,CAFG,CAGZC,WAAW,CAAE,SAHD,CAIZC,aAAa,CAAE,KAJH,CAAhB,CAOA,MAAOC,MAAK,CAACd,WAAW,CAAGQ,IAAf,CAAqBC,OAArB,CAAZ,CACH,CATD,CAWA,GAAMM,oBAAmB,CAAG,QAAtBA,oBAAsB,EAAe,IAAdP,KAAc,2DAAP,EAAO,CACvC,GAAMC,QAAO,CAAG,CACZC,MAAM,CAAE,KADI,CAEZC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFG,CAGZE,aAAa,CAAE,KAHH,CAAhB,CAMA,MAAOC,MAAK,WAAIX,aAAJ,aAAqBK,IAArB,aAA6B,GAAIQ,gBAAJ,CAAoB,CAACC,GAAG,CAACZ,YAAL,CAApB,CAA7B,EAAwEI,OAAxE,CAAZ,CACH,CARD,CAUA,GAAMS,KAAI,CAAG,QAAPA,KAAO,EAA0B,IAAzBV,KAAyB,2DAAlB,EAAkB,IAAdW,KAAc,2DAAP,EAAO,CACnC,GAAMV,QAAO,CAAG,CACZC,MAAM,CAAE,MADI,CAEZC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAAsC,SAAU,UAAhD,CAA4D,gBAAiB,8CAA7E,CAA6H,UAAW,IAAxI,CAFG,CAGZQ,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAHM,CAIZP,WAAW,CAAE,SAJD,CAAhB,CAOA,MAAOE,MAAK,CAACd,WAAW,CAAGQ,IAAf,CAAqBC,OAArB,CAAZ,CACH,CATD,CAWA,GAAMa,IAAG,CAAG,QAANA,IAAM,EAA0B,IAAzBd,KAAyB,2DAAlB,EAAkB,IAAdW,KAAc,2DAAP,EAAO,CAClC,GAAMV,QAAO,CAAG,CACZC,MAAM,CAAE,KADI,CAEZC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAAsC,SAAU,UAAhD,CAA4D,gBAAiB,8CAA7E,CAA6H,UAAW,IAAxI,CAFG,CAGZQ,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAHM,CAIZP,WAAW,CAAE,SAJD,CAAhB,CAOA,MAAOE,MAAK,CAACd,WAAW,CAAGQ,IAAf,CAAqBC,OAArB,CAAZ,CACH,CATD,CAWA,OACIF,GADJ,CAEIW,IAFJ,CAGII,GAHJ,CAIIP,mBAJJ"},"metadata":{},"sourceType":"module"}